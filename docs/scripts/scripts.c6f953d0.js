!function(){"use strict";angular.module("facetApp",["ui.router","seco.facetedSearch","ngTable","angular.filter"]).constant("_",_).constant("RESULTS_PER_PAGE",25).constant("PAGES_PER_QUERY",1).config(["$urlMatcherFactoryProvider",function(a){a.strictMode(!1)}]).config(["$stateProvider",function(a){a.state("facetApp",{url:"/",templateUrl:"views/norssit.html",controller:"MainController",controllerAs:"vm"})}])}(),function(){"use strict";function a(a,b,c){function d(a){return m.getResults(a,"?familyName ?givenName")}function e(){var b=angular.copy(g);return a.when(b)}function f(){return k}this.getResults=d,this.getFacets=e,this.getFacetOptions=f;var g={entryText:{facetId:"entryText",predicate:"<http://ldf.fi/schema/person_registry/entryText>",name:"Haku",enabled:!0},familyName:{facetId:"familyName",predicate:"<http://schema.org/familyName>",name:"Sukunimi"},birthPlace:{facetId:"birthPlace",predicate:"<http://schema.org/birthPlace>",name:"Syntymäpaikka",enabled:!0},enrollmentYear:{facetId:"enrollmentYear",predicate:"<http://ldf.fi/schema/person_registry/enrollmentYear>",name:"Aloittamisvuosi",enabled:!0},matriculationYear:{facetId:"matriculationYear",predicate:"<http://ldf.fi/schema/person_registry/matriculationYear>",name:"Valmistumisvuosi",enabled:!0},hobby:{facetId:"hobby",predicate:"<http://schema.org/hobby>",name:"Harrastus"}},h=" PREFIX hobbies: <http://ldf.fi/hobbies/>  PREFIX norssit: <http://ldf.fi/norssit/>  PREFIX owl: <http://www.w3.org/2002/07/owl#>  PREFIX person_registry: <http://ldf.fi/schema/person_registry/>  PREFIX places: <http://ldf.fi/places/>  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>  PREFIX relatives: <http://ldf.fi/relatives/>  PREFIX schema: <http://schema.org/>  PREFIX schemax: <http://topbraid.org/schemax/>  PREFIX dct: <http://purl.org/dc/terms/>  PREFIX xml: <http://www.w3.org/XML/1998/namespace>  PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> ",i=" SELECT * WHERE {  {     <RESULT_SET>   }   OPTIONAL { ?id schema:givenName ?givenName . }  OPTIONAL { ?id schema:familyName ?familyName . }  OPTIONAL { ?id schema:birthPlace ?birthPlace . }  OPTIONAL { ?id schema:birthDate ?birthDate . }  OPTIONAL { ?id schema:deathDate ?deathDate . }  OPTIONAL { ?id schema:hobby ?hobby . }  OPTIONAL { ?id schema:image ?image . }  OPTIONAL { ?id dct:description ?description . }  OPTIONAL { ?id person_registry:pageNumber ?pageNumber . }  OPTIONAL { ?id person_registry:pageImageURL ?pageImageURL . }  OPTIONAL { ?id person_registry:relatedNorssi ?relatedNorssi . }  OPTIONAL { ?id person_registry:enrollmentYear ?enrollmentYear . }  OPTIONAL { ?id person_registry:matriculationYear ?matriculationYear . }  OPTIONAL { ?id person_registry:entryText ?entryText . }  OPTIONAL { ?id norssit:wikipedia ?wikipedia . }  OPTIONAL { ?id norssit:viaf ?viaf . }  OPTIONAL { ?id norssit:kansallisbiografia ?kansallisbiografia . }  OPTIONAL { ?id norssit:wikidata ?wikidata . }  OPTIONAL { ?id norssit:ulan ?ulan . }  OPTIONAL { ?id norssit:warsa ?warsa . }  OPTIONAL { ?id norssit:kb ?kb . } }",j="https://ldf.fi/norssit/sparql",k={endpointUrl:j,rdfClass:"<http://xmlns.com/foaf/0.1/Person>",preferredLang:"fi"},l={queryTemplate:i,prefixes:h,pagesPerQuery:2},m=new c(j,l)}angular.module("facetApp").service("norssitService",a),a.$inject=["$q","_","FacetResultHandler"]}(),function(){"use strict";function a(a,b,c){function d(c,d){return a("/page-templates/navbar-fi.html").then(function(b){return d.html(b),a("views/subnavbar.html")}).then(function(a){return angular.element("#subnav").html(a),b(d.contents())(c)})}function e(){function a(){c.open({templateUrl:"views/help.html",size:"lg"})}var b=this;b.showHelp=a}return{link:d,controller:e,controllerAs:"vm"}}angular.module("facetApp").directive("wsNavbar",a),a.$inject=["$templateRequest","$compile","$uibModal"]}(),function(){"use strict";function a(a){function b(){return a.$close()}var c=this;c.close=b,c.$onInit=function(){c.person=c.resolve.person}}angular.module("facetApp").component("registerPageModal",{templateUrl:"views/page-modal.html",controller:a,bindings:{resolve:"<",close:"&",dismiss:"&"}}),a.$inject=["$scope"]}(),function(){"use strict";angular.module("facetApp").controller("MainController",["$scope","$uibModal","_","RESULTS_PER_PAGE","norssitService","NgTableParams","FacetHandler","facetUrlStateHandlerService",function(a,b,c,d,e,f,g,h){function i(){n.tableParams=new f({count:d},{getData:l})}function j(a){b.open({component:"registerPageModal",size:"lg",resolve:{person:function(){return a}}})}function k(){var a=e.getFacetOptions();return a.initialState=h.getFacetValuesFromUrlParams(),a}function l(a){return n.isLoadingResults=!0,n.pager.getPage(a.page()-1,a.count()).then(function(a){return n.pager.getTotalCount().then(function(b){return n.tableParams.total(b),a}).then(function(a){return n.isLoadingResults=!1,a})})}function m(a,b){h.updateUrlParams(b),n.isLoadingResults=!0,e.getResults(b).then(function(a){n.pager=a,n.tableParams?(n.tableParams.page(1),n.tableParams.reload()):i()})}var n=this;n.openPage=j;var o=a.$on("sf-initial-constraints",function(a,b){m(a,b),o()});a.$on("sf-facet-constraints",m),e.getFacets().then(function(b){n.facets=b,n.facetOptions=k(),n.facetOptions.scope=a,n.handler=new g(n.facetOptions)})}])}(),angular.module("facetApp").run(["$templateCache",function(a){"use strict";a.put("views/help.html",'<div class="modal-header"> <div class="row"> <div class="col-xs-10 text-left"> <h3 class="modal-title">Norssit</h3> </div> <div class="col-xs-2"> <a href="#" ng-click="$close()" class="no-decoration btn-lg pull-right glyphicon glyphicon-remove"></a> </div> </div> </div> <div class="modal-body"> <p> Matrikkelin tietoja voi selata käyttöliittymässä käyttämällä vasemmalla olevia suodattimia. Hakeaksesi rekisterillä tekstihaulla, kirjoita haku \'Haku\'-kenttään. Poistaaksesi hakurajauksen, paina X-nappia hakukentän oikealla puolella. Jokaisella suodattimella on oma hakukenttä sekä lista suodattimen vaihtoehdoista, josta voi valita haluamansa ehdon. Tulosten määrä vaihtoehdolla näkyy suluissa valinnan nimen perässä. Valinnan voi poistaa valitsemalla vaihtoehdon \'-- No Selection --\'. Jokaisesta suodattimesta voi valita vain yhden vaihtoehdon, jolloin henkilölistausta suodatetaan valintojen perusteella. Tuloslistaa voi suodattaa käyttäen eri suodattimia yhdessä. </p> <p> <h4>Suodattimien valinta:</h4> <ol> <li>Valitse joku suodattimista ja avaa suodatin painamalla \'+\'-nappia suodattimen otsikon oikealla puolella.</li> <li>Valitse suodattimeen arvo listalta tai hae kirjoittamalla listan yllä olevaan tekstikenttään. Jos suodatinehtoa haetaan tekstikentän avulla alla oleva lista suodattimista päivittyy kirjoittaessa.</li> <li>Suodatinehdon voi valita klikkaamalla sitä listalta, tai poistaa valitsemalla \'-- No Selection --\' listan alusta. </li> <li>Henkilöiden lista päivittyy suodattimien oikealla puolella.</li> <li>Tuloksia voi nyt suodattaa tarvittaessa lisää toistamalla toisella suodattimella edelliset askeleet 1-4.</li> </ol> </p> </div>'),a.put("views/norssit.html",'<div class="container-fluid"> <div class="row"> <div class="col-md-2"> <div class="facets"> <seco-text-facet data-options="vm.facets.entryText"></seco-text-facet> <seco-basic-facet data-options="vm.facets.familyName"></seco-basic-facet> <seco-basic-facet data-options="vm.facets.birthPlace"></seco-basic-facet> <seco-basic-facet data-options="vm.facets.enrollmentYear"></seco-basic-facet> <seco-basic-facet data-options="vm.facets.matriculationYear"></seco-basic-facet> <seco-basic-facet data-options="vm.facets.hobby"></seco-basic-facet> </div> </div> <div class="col-md-10"> <div ng-include="\'views/norssit.persons.html\'"></div> </div> </div> </div>'),a.put("views/norssit.persons.html",'<div> <h1>Norssit</h1> <p>Norssimatrikkelihaku. Voit rajata tulosta tekemällä valintoja suodattimista ja selata henkilöihin liittyvää tietoa linkkien kautta.</p> </div> <table class="table casualty-table ng-table-responsive" ng-table="vm.tableParams"> <colgroup> <col width="20%"> <col width="10%"> <col width="10%"> <col width="10%"> <col width="10%"> <col width="5%"> <col width="35%"> </colgroup> <tr ng-show="!vm.isLoadingResults" ng-repeat="person in $data"> <td class="person-image-container" data-title="\'Nimi\'"> {{ ::person.givenName }} {{ ::person.familyName }} <br> {{ ::person.birthDate | date:\'dd.MM.yyyy\' }} - {{ ::person.deathDate | date:\'dd.MM.yyyy\' }} <img ng-if="::person.image" class="person-image img img-sm img-responsive" ng-src="{{ ::person.image }}"> </td> <td data-title="\'Norssi\'"> {{ ::person.enrollmentYear }} - {{ ::person.matriculationYear }} </td> <td data-title="\'Syntymäpaikka\'"> {{ ::person.birthPlace }} </td> <td class="links" data-title="\'Linkit\'"> <a class="link" ng-if="::person.wikipedia" ng-href="{{ ::person.wikipedia }}">Wikipedia</a> <a class="link" ng-if="::person.kansallisbiografia" ng-href="{{ ::person.kansallisbiografia }}">Kansallisbiografia</a> <a class="link" ng-if="::person.warsa" ng-href="http://www.sotasampo.fi/fi/persons/?uri={{ ::person.warsa }}">Sotasampo</a> <a class="link" ng-if="::person.ulan" ng-href="{{ ::person.ulan }}">ULAN</a> <a class="link" ng-if="::person.viaf" ng-href="{{ ::person.viaf }}">VIAF</a> </td> <td data-title="\'Harrastus\'"> {{ ::person.hobby | join:\', \' }} </td> <td data-title="\'Sukulaisnorssi\'"> {{ ::person.relatedNorssi | join:\', \' }} </td> <td data-title="\'Matrikkeliteksti\'"> <a class="no-style" href="" ng-click="::vm.openPage(person)">{{ ::person.entryText }}</a> </td> </tr> </table> <img class="loading-img" src="images/loading-lg.7ba320e0.gif" ng-if="vm.isLoadingResults">'),a.put("views/page-modal.html",'<div class="modal-body"> <img class="img img-responsive" ng-src="../pageimages/access_img/{{ $ctrl.person.pageImageURL }}"> </div>'),a.put("views/subnavbar.html",'<ul class="nav navbar-nav"> <li><a href="" id="show-help" ng-click="vm.showHelp()">Ohje</a></li> </ul>')}]);